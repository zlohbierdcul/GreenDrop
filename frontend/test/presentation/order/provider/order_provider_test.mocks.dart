// Mocks generated by Mockito 5.4.5 from annotations
// in greendrop/test/presentation/order/provider/order_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:greendrop/src/data/repositories/interfaces/authentication_repository.dart'
    as _i3;
import 'package:greendrop/src/data/repositories/interfaces/order_repository.dart'
    as _i7;
import 'package:greendrop/src/domain/models/address.dart' as _i5;
import 'package:greendrop/src/domain/models/order.dart' as _i8;
import 'package:greendrop/src/domain/models/user.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [IAuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthenticationRepository extends _i1.Mock
    implements _i3.IAuthenticationRepository {
  MockIAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> signIn(String? email, String? password, bool remeberMeTicked) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  void signOut() => super.noSuchMethod(
    Invocation.method(#signOut, []),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<bool> register(
    String? username,
    String? email,
    String? password,
    String? firstname,
    String? lastname,
    String? birthdate,
    String? street,
    String? streetNo,
    String? city,
    String? zipCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#register, [
              username,
              email,
              password,
              firstname,
              lastname,
              birthdate,
              street,
              streetNo,
              city,
              zipCode,
            ]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  void updateUser(_i2.User? user) => super.noSuchMethod(
    Invocation.method(#updateUser, [user]),
    returnValueForMissingStub: null,
  );

  @override
  void updateUserAddress(_i5.Address? address) => super.noSuchMethod(
    Invocation.method(#updateUserAddress, [address]),
    returnValueForMissingStub: null,
  );

  @override
  void addAddress(_i5.Address? address) => super.noSuchMethod(
    Invocation.method(#addAddress, [address]),
    returnValueForMissingStub: null,
  );

  @override
  void deleteAddress(_i5.Address? address) => super.noSuchMethod(
    Invocation.method(#deleteAddress, [address]),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<_i2.User> fetchUser() =>
      (super.noSuchMethod(
            Invocation.method(#fetchUser, []),
            returnValue: _i4.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#fetchUser, [])),
            ),
          )
          as _i4.Future<_i2.User>);

  @override
  _i4.Future<String> createAddress(
    String? street,
    String? streetNo,
    String? city,
    String? zipCode,
    String? jwt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createAddress, [
              street,
              streetNo,
              city,
              zipCode,
              jwt,
            ]),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createAddress, [
                  street,
                  streetNo,
                  city,
                  zipCode,
                  jwt,
                ]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<String> createUserDetail(
    String? username,
    String? email,
    String? firstname,
    String? lastname,
    String? birthdate,
    String? addressId,
    String? jwt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createUserDetail, [
              username,
              email,
              firstname,
              lastname,
              birthdate,
              addressId,
              jwt,
            ]),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createUserDetail, [
                  username,
                  email,
                  firstname,
                  lastname,
                  birthdate,
                  addressId,
                  jwt,
                ]),
              ),
            ),
          )
          as _i4.Future<String>);
}

/// A class which mocks [IOrderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOrderRepository extends _i1.Mock implements _i7.IOrderRepository {
  MockIOrderRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> createOrder(_i8.Order? order) =>
      (super.noSuchMethod(
            Invocation.method(#createOrder, [order]),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createOrder, [order]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<List<_i8.Order>> getUserOrders(_i2.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#getUserOrders, [user]),
            returnValue: _i4.Future<List<_i8.Order>>.value(<_i8.Order>[]),
          )
          as _i4.Future<List<_i8.Order>>);
}
